{"version":3,"file":"postletter.min.js","sources":["../src/postletter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {getString} from \"core/str\";\nimport {prefetchStrings} from 'core/prefetch';\n\n/**\n * JavaScript for the post letter\n *\n * @module     block_townsquare/postletter\n * @copyright  2023 Tamaro Walter\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst contentElements = document.getElementsByClassName('postletter_message');\nconst buttons = document.getElementsByClassName('townsquare_showmore');\n\nconst Selectors = {\n    actions: {\n        seemorebutton: '[data-action=\"block_townsquare/showmore_button\"]',\n    },\n};\n\n/**\n * Init function. It limits the height of posts that are too long and adds a \"show more\" button to them if the user wants to see\n * the full text.\n */\nexport function init() {\n    // Get the strings for the show more/show less button.\n    prefetchStrings('moodle', ['showmore', 'showless',]);\n\n    contentElements.forEach(\n        (element) => {\n            // Check if the div is too long.\n            if (element.clientHeight >= 90) {\n                // If the text is too long, show the showmore button.\n                buttons[element.id].setAttribute('showmore', 'true');\n            } else {\n                // If the text is not too long, hide the showmore button.\n                buttons[element.id].style.display = \"none\";\n            }\n        }\n    );\n\n    // Add event listeners for the show more Button.\n    addEventListener();\n}\n\n/**\n * Event listener for the show more/show less button.\n */\nconst addEventListener = () => {\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.actions.seemorebutton)) {\n            // Get the id of the clicked element.\n            let letterid = e.target.id;\n            contentElements.forEach(\n                (element) => {\n                    if (element.id == letterid) {\n                        if (buttons[letterid].getAttribute('showmore') == 'true') {\n                            element.classList.add(\"expanded\");\n                            changeButtonString(letterid, false);\n                        } else {\n                            element.classList.remove(\"expanded\");\n                            changeButtonString(letterid, true);\n                        }\n                    }\n                }\n            );\n        }\n    });\n};\n\n/**\n * Changes the button strings.\n * @param {string} index Which button should be changed\n * @param {boolean} toshowmore a boolean that indicates if the button should show more or less\n */\nasync function changeButtonString(index, toshowmore) {\n    if (toshowmore == true) {\n        buttons[index].textContent = await getString('showmore', 'moodle');\n        buttons[index].setAttribute('showmore', 'true');\n    } else {\n        buttons[index].textContent = await getString('showless', 'moodle');\n        buttons[index].setAttribute('showmore', 'false');\n    }\n}\n"],"names":["prefetchStrings","contentElements","forEach","element","clientHeight","buttons","id","setAttribute","style","display","addEventListener","document","getElementsByClassName","Selectors","seemorebutton","e","target","closest","letterid","getAttribute","classList","add","changeButtonString","remove","async","index","toshowmore","textContent","getString"],"mappings":"oLAuCO,YAEH,EAAAA,UAAAA,iBAAgB,SAAU,CAAC,WAAY,aAEvCC,gBAAgBC,QACXC,UAEOA,QAAQC,cAAgB,GAExBC,QAAQF,QAAQG,IAAIC,aAAa,WAAY,QAG7CF,QAAQF,QAAQG,IAAIE,MAAMC,QAAU,SAMhDC,kBACJ;;;;;;;;AAhCA,MAAMT,gBAAkBU,SAASC,uBAAuB,sBAClDP,QAAUM,SAASC,uBAAuB,uBAE1CC,kBACO,CACLC,cAAe,oDAgCvB,MAAMJ,iBAAmBA,KACrBC,SAASD,iBAAiB,QAASK,IAC/B,GAAIA,EAAEC,OAAOC,QAAQJ,kBAAkBC,eAAgB,CAEnD,IAAII,SAAWH,EAAEC,OAAOV,GACxBL,gBAAgBC,QACXC,UACOA,QAAQG,IAAMY,WACoC,QAA9Cb,QAAQa,UAAUC,aAAa,aAC/BhB,QAAQiB,UAAUC,IAAI,YACtBC,mBAAmBJ,UAAU,KAE7Bf,QAAQiB,UAAUG,OAAO,YACzBD,mBAAmBJ,UAAU,MAKjD,KASRM,eAAeF,mBAAmBG,MAAOC,YACnB,GAAdA,YACArB,QAAQoB,OAAOE,kBAAoB,EAAAC,KAASA,WAAC,WAAY,UACzDvB,QAAQoB,OAAOlB,aAAa,WAAY,UAExCF,QAAQoB,OAAOE,kBAAoB,EAAAC,KAASA,WAAC,WAAY,UACzDvB,QAAQoB,OAAOlB,aAAa,WAAY,SAEhD,CAAC"}